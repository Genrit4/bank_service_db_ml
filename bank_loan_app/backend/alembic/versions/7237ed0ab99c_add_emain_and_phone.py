"""add_emain_and_phone

Revision ID: 7237ed0ab99c
Revises: b5755a3768c2
Create Date: 2025-06-25 16:36:58.584225

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7237ed0ab99c'
down_revision: Union[str, Sequence[str], None] = 'b5755a3768c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 1) Добавление колонок с дефолтами
    op.add_column('user', sa.Column('email', sa.String(100), nullable=False, server_default='no-reply@example.com'))
    op.add_column('user', sa.Column('phone', sa.String(20), nullable=False, server_default='0000000000'))

    # 2) Заполняем для существующих юзеров уникальные заглушки
    op.execute("""
        UPDATE "user"
           SET email = login || '@example.com'
    """)

    # 3) Убираем дефолт (не будем дальше подставлять этот заглуш)
    op.alter_column('user', 'email', server_default=None)
    op.alter_column('user', 'phone', server_default=None)

    # 4) Теперь создаём уникальный индекс — все строки разными email
    op.create_unique_constraint(None, 'user', ['email'])

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_column('user', 'phone')
    op.drop_column('user', 'email')
    # ### end Alembic commands ###
